pub mod analysis;
pub mod enums;
pub mod structs;
pub mod types;
pub mod utils;

use proc_macro2::TokenStream;
use quote::quote;
use riscv_instruction_parser::types::{ISABase, Instruction};

/// 指令变体，用于分析指令在不同 ISA 基础之间的共享性
#[derive(Debug, Clone)]
pub struct InstructionVariant {
    pub instruction: Instruction,
    pub isa_bases: Vec<ISABase>,
    pub is_shared: bool,
}

/// RISC-V 指令代码生成器
pub struct CodeGenerator {
    instructions: Vec<Instruction>,
}

impl CodeGenerator {
    pub fn new(instructions: Vec<Instruction>) -> Self {
        Self { instructions }
    }

    /// 生成完整的指令枚举代码
    pub fn generate_instruction_enum(&self) -> TokenStream {
        let analysis = self.analyze_instruction_sharing(&self.instructions);

        let (restricted_register_defs, restricted_immediate_defs) =
            self.generate_all_restricted_type_definitions_for_analysis(&analysis);

        let imports = self.generate_imports();
        let extension_enums_with_random = self.generate_extension_enums_with_random();
        let instruction_enums = self.generate_instruction_enums(&analysis);
        let main_enum = self.generate_main_enum(&analysis);

        quote! {
            // This file is auto-generated by the RISC-V instruction code generator.
            // Author: canxin121 <q1969730106@gmail.com>
            // Do not edit this file manually.
            #imports

            #restricted_register_defs

            #restricted_immediate_defs

            #extension_enums_with_random

            #instruction_enums

            #main_enum
        }
    }

    /// 生成完全分离的指令枚举代码（不合并共享指令，完全按扩展和ISA基础分开）
    pub fn generate_separated_instruction_enum(&self) -> TokenStream {
        let (restricted_register_defs, restricted_immediate_defs) =
            self.generate_all_restricted_type_definitions_for_separated(&self.instructions);

        let imports = self.generate_imports();
        let extension_enums_with_random = self.generate_separated_extension_enums_with_random();
        let instruction_structs = self.generate_separated_instruction_structs();
        let separated_enums = self.generate_separated_enums();
        let main_enum = self.generate_separated_main_enum();

        quote! {
            // This file is auto-generated by the RISC-V instruction code generator.
            // Author: canxin121 <q1969730106@gmail.com>
            // Do not edit this file manually.
            #imports

            #restricted_register_defs

            #restricted_immediate_defs

            #extension_enums_with_random

            #instruction_structs

            #separated_enums

            #main_enum
        }
    }
}
