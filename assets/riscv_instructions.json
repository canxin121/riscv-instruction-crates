[
  {
    "name": "sha512sum1",
    "extension": "Zknh",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha512sum1 {xd}, {xs1}"
    }
  },
  {
    "name": "sha256sig0",
    "extension": "Zknh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha256sig0 {xd}, {xs1}"
    }
  },
  {
    "name": "sha512sig1",
    "extension": "Zknh",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha512sig1 {xd}, {xs1}"
    }
  },
  {
    "name": "sha512sum0",
    "extension": "Zknh",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha512sum0 {xd}, {xs1}"
    }
  },
  {
    "name": "sha512sig1h",
    "extension": "Zknh",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha512sig1h {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sha512sig0l",
    "extension": "Zknh",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha512sig0l {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sha256sum1",
    "extension": "Zknh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha256sum1 {xd}, {xs1}"
    }
  },
  {
    "name": "sha512sig0",
    "extension": "Zknh",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha512sig0 {xd}, {xs1}"
    }
  },
  {
    "name": "sha256sum0",
    "extension": "Zknh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha256sum0 {xd}, {xs1}"
    }
  },
  {
    "name": "sha512sum1r",
    "extension": "Zknh",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha512sum1r {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sha512sig1l",
    "extension": "Zknh",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha512sig1l {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sha256sig1",
    "extension": "Zknh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha256sig1 {xd}, {xs1}"
    }
  },
  {
    "name": "sha512sum0r",
    "extension": "Zknh",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha512sum0r {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sha512sig0h",
    "extension": "Zknh",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sha512sig0h {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "c.flwsp",
    "extension": "Zcf",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 6
        },
        "restrictions": {
          "multiple_of": 4
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.flwsp {fd}, {uimm}(sp)"
    }
  },
  {
    "name": "c.flw",
    "extension": "Zcf",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5
        },
        "restrictions": {
          "multiple_of": 4
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.flw {fd}, {uimm}({xs1})"
    }
  },
  {
    "name": "c.fswsp",
    "extension": "Zcf",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 6
        },
        "restrictions": {
          "multiple_of": 4
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.fswsp {fs2}, {uimm}(sp)"
    }
  },
  {
    "name": "c.fsw",
    "extension": "Zcf",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5
        },
        "restrictions": {
          "multiple_of": 4
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.fsw {fs2}, {uimm}({xs1})"
    }
  },
  {
    "name": "remu",
    "extension": "M",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "remu {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "mul",
    "extension": "M",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "mul {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "divuw",
    "extension": "M",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "divuw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "mulhsu",
    "extension": "M",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "mulhsu {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "divu",
    "extension": "M",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "divu {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "mulw",
    "extension": "M",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "mulw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "rem",
    "extension": "M",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "rem {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "remw",
    "extension": "M",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "remw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "mulhu",
    "extension": "M",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "mulhu {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "mulh",
    "extension": "M",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "mulh {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "div",
    "extension": "M",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "div {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "remuw",
    "extension": "M",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "remuw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "divw",
    "extension": "M",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "divw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "vsm4k.vi",
    "extension": "Zvks",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsm4k.vi {vd}, {vs2}, {uimm}"
    }
  },
  {
    "name": "vsm4r.vv",
    "extension": "Zvks",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsm4r.vv {vd}, {vs2}"
    }
  },
  {
    "name": "vsm3c.vi",
    "extension": "Zvks",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsm3c.vi {vd}, {vs2}, {uimm}"
    }
  },
  {
    "name": "vsm4r.vs",
    "extension": "Zvks",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsm4r.vs {vd}, {vs2}"
    }
  },
  {
    "name": "vsm3me.vv",
    "extension": "Zvks",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsm3me.vv {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "sctrclr",
    "extension": "Smdbltrp",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "sctrclr"
    }
  },
  {
    "name": "sret",
    "extension": "S",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "sret"
    }
  },
  {
    "name": "sfence.vma",
    "extension": "S",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sfence.vma {xs1}, {xs2}"
    }
  },
  {
    "name": "c.mop.n",
    "extension": "Zcmop",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "n",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        },
        "restrictions": {
          "odd_only": true
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "format!(\"c.mop.{}\", n)"
    }
  },
  {
    "name": "feq.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "feq.q {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "froundnx.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "froundnx.q {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fmax.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmax.q {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvt.wu.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.wu.q {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fsub.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsub.q {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fcvt.l.q",
    "extension": "Q",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.l.q {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fcvt.w.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.w.q {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fcvt.h.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.h.q {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fsgnj.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnj.q {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fmvh.x.q",
    "extension": "Q",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmvh.x.q {xd}, {fs1}"
    }
  },
  {
    "name": "fsqrt.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsqrt.q {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fnmadd.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fnmadd.q {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fcvt.q.h",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.q.h {fd}, {fs1}"
    }
  },
  {
    "name": "fcvt.s.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.s.q {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fcvt.q.l",
    "extension": "Q",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.q.l {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "fcvt.q.lu",
    "extension": "Q",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.q.lu {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "fmul.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmul.q {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fmsub.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmsub.q {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fclass.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fclass.q {xd}, {fs1}"
    }
  },
  {
    "name": "fcvt.q.d",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.q.d {fd}, {fs1}"
    }
  },
  {
    "name": "flt.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "flt.q {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fleq.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fleq.q {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fsgnjx.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnjx.q {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fround.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fround.q {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fmvp.q.x",
    "extension": "Q",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmvp.q.x {fd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "fmaxm.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmaxm.q {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fsq",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsq {fs2}, {imm}({xs1})"
    }
  },
  {
    "name": "fnmsub.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fnmsub.q {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fminm.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fminm.q {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fltq.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fltq.q {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fle.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fle.q {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fli.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "FliConstant",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fli.q {fd}, {uimm}"
    }
  },
  {
    "name": "fcvt.q.s",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.q.s {fd}, {fs1}"
    }
  },
  {
    "name": "fsgnjn.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnjn.q {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fdiv.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fdiv.q {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fcvt.lu.q",
    "extension": "Q",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.lu.q {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fcvt.q.w",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.q.w {fd}, {xs1}"
    }
  },
  {
    "name": "fcvt.q.wu",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.q.wu {fd}, {xs1}"
    }
  },
  {
    "name": "fmadd.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmadd.q {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fcvt.d.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.d.q {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fmin.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmin.q {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "flq",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "flq {fd}, {imm}({xs1})"
    }
  },
  {
    "name": "fadd.q",
    "extension": "Q",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fadd.q {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "sb.rl",
    "extension": "Zalasr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sb.rl {xs2}, ({xs1})"
    }
  },
  {
    "name": "lw.aq",
    "extension": "Zalasr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lw.aq {xd}, ({xs1})"
    }
  },
  {
    "name": "sh.rl",
    "extension": "Zalasr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sh.rl {xs2}, ({xs1})"
    }
  },
  {
    "name": "lh.aq",
    "extension": "Zalasr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lh.aq {xd}, ({xs1})"
    }
  },
  {
    "name": "sw.rl",
    "extension": "Zalasr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sw.rl {xs2}, ({xs1})"
    }
  },
  {
    "name": "sd.rl",
    "extension": "Zalasr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sd.rl {xs2}, ({xs1})"
    }
  },
  {
    "name": "lb.aq",
    "extension": "Zalasr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lb.aq {xd}, ({xs1})"
    }
  },
  {
    "name": "ld.aq",
    "extension": "Zalasr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "ld.aq {xd}, ({xs1})"
    }
  },
  {
    "name": "cm.pop",
    "extension": "Zcmp",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "saved_reg_list_with_stack_adj",
        "operand_type": "SavedRegListWithStackAdj",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 6
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let reg_list_str = saved_reg_list_with_stack_adj.get_saved_reg_list_string();\n    let stack_adj = saved_reg_list_with_stack_adj.get_stack_adjustment();\n    format!(\"cm.pop {}, {}\", reg_list_str, stack_adj)\n}"
    }
  },
  {
    "name": "cm.push",
    "extension": "Zcmp",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "saved_reg_list_with_stack_adj",
        "operand_type": "SavedRegListWithStackAdj",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 6
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let reg_list_str = saved_reg_list_with_stack_adj.get_saved_reg_list_string();\n    let stack_adj = saved_reg_list_with_stack_adj.get_stack_adjustment();\n    format!(\"cm.push {}, -{}\", reg_list_str, stack_adj)\n}"
    }
  },
  {
    "name": "cm.mvsa01",
    "extension": "Zcmp",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "ne_r1s_r2s",
        "operand_type": "NotEqualCompressedSavedIntegerRegisterPair",
        "bit_lengths": {
          "RV32": 6,
          "RV64": 6
        }
      }
    ],
    "assembly_syntax": {
      "Format": "cm.mvsa01 {ne_r1s_r2s}"
    }
  },
  {
    "name": "cm.popretz",
    "extension": "Zcmp",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "saved_reg_list_with_stack_adj",
        "operand_type": "SavedRegListWithStackAdj",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 6
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let reg_list_str = saved_reg_list_with_stack_adj.get_saved_reg_list_string();\n    let stack_adj = saved_reg_list_with_stack_adj.get_stack_adjustment();\n    format!(\"cm.popretz {}, {}\", reg_list_str, stack_adj)\n}"
    }
  },
  {
    "name": "cm.popret",
    "extension": "Zcmp",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "saved_reg_list_with_stack_adj",
        "operand_type": "SavedRegListWithStackAdj",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 6
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let reg_list_str = saved_reg_list_with_stack_adj.get_saved_reg_list_string();\n    let stack_adj = saved_reg_list_with_stack_adj.get_stack_adjustment();\n    format!(\"cm.popret {}, {}\", reg_list_str, stack_adj)\n}"
    }
  },
  {
    "name": "cm.mva01s",
    "extension": "Zcmp",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "r1s",
        "operand_type": "SavedIntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "r2s",
        "operand_type": "SavedIntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "cm.mva01s {r1s}, {r2s}"
    }
  },
  {
    "name": "vclmulh.vx",
    "extension": "Zvbc",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vclmulh.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vclmul.vv",
    "extension": "Zvbc",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vclmul.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vclmul.vx",
    "extension": "Zvbc",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vclmul.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vclmulh.vv",
    "extension": "Zvbc",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vclmulh.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "flt.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "flt.s {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvt.s.wu",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.s.wu {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "fsgnj.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnj.s {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "froundnx.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "froundnx.s {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fcvt.l.s",
    "extension": "F",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.l.s {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fsw",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsw {fs2}, {imm}({xs1})"
    }
  },
  {
    "name": "fmadd.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmadd.s {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "flw",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "flw {fd}, {imm}({xs1})"
    }
  },
  {
    "name": "fsgnjx.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnjx.s {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvt.w.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.w.s {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fsub.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsub.s {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fltq.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fltq.s {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fleq.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fleq.s {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvt.s.l",
    "extension": "F",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.s.l {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "feq.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "feq.s {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fmin.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmin.s {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fsgnjn.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnjn.s {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fminm.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fminm.s {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fnmadd.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fnmadd.s {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fadd.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fadd.s {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fmul.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmul.s {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fmv.w.x",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmv.w.x {fd}, {xs1}"
    }
  },
  {
    "name": "fmsub.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmsub.s {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fmaxm.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmaxm.s {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fnmsub.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fnmsub.s {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fli.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "FliConstant",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fli.s {fd}, {uimm}"
    }
  },
  {
    "name": "fle.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fle.s {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvt.wu.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.wu.s {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fround.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fround.s {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fmv.x.w",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmv.x.w {xd}, {fs1}"
    }
  },
  {
    "name": "fclass.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fclass.s {xd}, {fs1}"
    }
  },
  {
    "name": "fmax.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmax.s {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fsqrt.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsqrt.s {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fdiv.s",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fdiv.s {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fcvt.s.lu",
    "extension": "F",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.s.lu {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "fcvt.lu.s",
    "extension": "F",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.lu.s {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fcvt.s.w",
    "extension": "F",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.s.w {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "sspush.x1",
    "extension": "Zicfiss",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "sspush x1"
    }
  },
  {
    "name": "ssamoswap.w",
    "extension": "Zicfiss",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"ssamoswap.w{suffix} {xd}, {xs2}, 0({xs1})\")\n}"
    }
  },
  {
    "name": "sspopchk.x5",
    "extension": "Zicfiss",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "sspopchk x5"
    }
  },
  {
    "name": "ssamoswap.d",
    "extension": "Zicfiss",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"ssamoswap.d{suffix} {xd}, {xs2}, 0({xs1})\")\n}"
    }
  },
  {
    "name": "ssrdp",
    "extension": "Zicfiss",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "ssrdp {xd}"
    }
  },
  {
    "name": "sspush.x5",
    "extension": "Zicfiss",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "sspush x5"
    }
  },
  {
    "name": "sspopchk.x1",
    "extension": "Zicfiss",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "sspopchk x1"
    }
  },
  {
    "name": "bexti",
    "extension": "Zbs",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 6
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "bexti {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "binv",
    "extension": "Zbs",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "binv {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "bclr",
    "extension": "Zbs",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "bclr {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "bext",
    "extension": "Zbs",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "bext {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "bclri",
    "extension": "Zbs",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 6
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "bclri {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "binvi",
    "extension": "Zbs",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "binvi {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "bset",
    "extension": "Zbs",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "bset {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "bseti",
    "extension": "Zbs",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 6
        }
      }
    ],
    "assembly_syntax": {
      "Format": "bseti {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "aes64ks2",
    "extension": "Zkn",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes64ks2 {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "aes64ks1i",
    "extension": "Zkn",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "rnum",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 4
        },
        "restrictions": {
          "min_max": [
            0,
            10
          ]
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes64ks1i {xd}, {xs1}, {rnum}"
    }
  },
  {
    "name": "aes64esm",
    "extension": "Zkne",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes64esm {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "aes32esi",
    "extension": "Zkne",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "bs",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes32esi {xd}, {xs1}, {xs2}, {bs}"
    }
  },
  {
    "name": "aes64es",
    "extension": "Zkne",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes64es {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "aes32esmi",
    "extension": "Zkne",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "bs",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes32esmi {xd}, {xs1}, {xs2}, {bs}"
    }
  },
  {
    "name": "amoswap.b",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoswap.b{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoswap.h",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoswap.h{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoor.b",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoor.b{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoadd.h",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoadd.h{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoor.h",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoor.h{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoand.b",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoand.b{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoxor.h",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoxor.h{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomax.b",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomax.b{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomax.h",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomax.h{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoxor.b",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoxor.b{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomin.h",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomin.h{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomin.b",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomin.b{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomaxu.h",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomaxu.h{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amocas.b",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amocas.b{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoadd.b",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoadd.b{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomaxu.b",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomaxu.b{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoand.h",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoand.h{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amominu.h",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amominu.h{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amominu.b",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amominu.b{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amocas.h",
    "extension": "Zabha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amocas.h{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "wrs.sto",
    "extension": "Zawrs",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "wrs.sto"
    }
  },
  {
    "name": "wrs.nto",
    "extension": "Zawrs",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "wrs.nto"
    }
  },
  {
    "name": "fcvt.l.d",
    "extension": "D",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.l.d {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fcvt.d.w",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.d.w {fd}, {xs1}"
    }
  },
  {
    "name": "fsqrt.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsqrt.d {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fcvt.d.wu",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.d.wu {fd}, {xs1}"
    }
  },
  {
    "name": "feq.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "feq.d {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fadd.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fadd.d {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fmvh.x.d",
    "extension": "D",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmvh.x.d {xd}, {fs1}"
    }
  },
  {
    "name": "fcvt.d.l",
    "extension": "D",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.d.l {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "fld",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fld {fd}, {imm}({xs1})"
    }
  },
  {
    "name": "fcvt.d.lu",
    "extension": "D",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.d.lu {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "flt.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "flt.d {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fsgnjx.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnjx.d {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fmul.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmul.d {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "froundnx.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "froundnx.d {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fsub.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsub.d {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fmax.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmax.d {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fltq.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fltq.d {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fsgnjn.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnjn.d {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvt.wu.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.wu.d {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fcvt.s.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.s.d {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fsd",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsd {fs2}, {imm}({xs1})"
    }
  },
  {
    "name": "fmin.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmin.d {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fmsub.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmsub.d {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fleq.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fleq.d {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fle.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fle.d {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fminm.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fminm.d {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fdiv.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fdiv.d {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fclass.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fclass.d {xd}, {fs1}"
    }
  },
  {
    "name": "fli.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "FliConstant",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fli.d {fd}, {uimm}"
    }
  },
  {
    "name": "fsgnj.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnj.d {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fmaxm.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmaxm.d {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvtmod.w.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvtmod.w.d {xd}, {fs1}, rtz"
    }
  },
  {
    "name": "fcvt.d.s",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.d.s {fd}, {fs1}"
    }
  },
  {
    "name": "fmvp.d.x",
    "extension": "D",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmvp.d.x {fd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "fround.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fround.d {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fnmadd.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fnmadd.d {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fmv.d.x",
    "extension": "D",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmv.d.x {fd}, {xs1}"
    }
  },
  {
    "name": "fcvt.w.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.w.d {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fmv.x.d",
    "extension": "D",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmv.x.d {xd}, {fs1}"
    }
  },
  {
    "name": "fnmsub.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fnmsub.d {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fmadd.d",
    "extension": "D",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmadd.d {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fcvt.lu.d",
    "extension": "D",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.lu.d {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "c.sh",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "format!(\"c.sh {xs2}, 0({xs1})\")"
    }
  },
  {
    "name": "c.lh",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "format!(\"c.lh {xd}, 0({xs1})\")"
    }
  },
  {
    "name": "c.sext.h",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.sext.h {xd}"
    }
  },
  {
    "name": "c.mul",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.mul {xd}, {xs2}"
    }
  },
  {
    "name": "c.zext.h",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.zext.h {xd}"
    }
  },
  {
    "name": "c.lbu",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 2,
          "RV64": 2
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.lbu {xd}, {uimm}({xs1})"
    }
  },
  {
    "name": "c.zext.b",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.zext.b {xd}"
    }
  },
  {
    "name": "c.sb",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 2,
          "RV64": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.sb {xs2}, {uimm}({xs1})"
    }
  },
  {
    "name": "c.lhu",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "format!(\"c.lhu {xd}, 0({xs1})\")"
    }
  },
  {
    "name": "c.not",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.not {xd}"
    }
  },
  {
    "name": "c.zext.w",
    "extension": "Zcb",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.zext.w {xd}"
    }
  },
  {
    "name": "c.sext.b",
    "extension": "Zcb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.sext.b {xd}"
    }
  },
  {
    "name": "fcvt.s.bf16",
    "extension": "Zfbfmin",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.s.bf16 {fd}, {fs1}"
    }
  },
  {
    "name": "fcvt.bf16.s",
    "extension": "Zfbfmin",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.bf16.s {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "vandn.vx",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vandn.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vcpop.v",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vcpop.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwsll.vi",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsll.vi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vclz.v",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vclz.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vror.vi",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 6,
          "RV64": 6
        }
      },
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vror.vi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vrol.vv",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrol.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vrev8.v",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrev8.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vror.vv",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vror.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwsll.vx",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsll.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vbrev.v",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vbrev.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vbrev8.v",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vbrev8.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vrol.vx",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrol.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vctz.v",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vctz.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwsll.vv",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsll.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vror.vx",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vror.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vandn.vv",
    "extension": "Zvbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vandn.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vse16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vse16.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg3ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg3ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg4e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg4e16.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vand.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vand.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg7ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg7ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg3e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg3e64.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmadd.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmadd.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmand.mm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmand.mm {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vwsub.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsub.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg7e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg7e64.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg7e32ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg7e32ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg5e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg5e16.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg3e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg3e16.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg5ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg5ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwcvt.x.f.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwcvt.x.f.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg6ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg6ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmadd.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmadd.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnsra.wi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnsra.wi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg7ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg7ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmadc.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmadc.vx {vd}, {vs2}, {xs1}"
    }
  },
  {
    "name": "vlseg5e16ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg5e16ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg6e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg6e64.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg2ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg2ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmflt.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmflt.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsle.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsle.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg6e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg6e32.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg3e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg3e8.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vxor.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vxor.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmv.x.s",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmv.x.s {xd}, {vs2}"
    }
  },
  {
    "name": "vfncvt.rtz.xu.f.w",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfncvt.rtz.xu.f.w {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vredsum.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vredsum.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnmsub.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnmsub.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmv1r.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmv1r.v {vd}, {vs2}"
    }
  },
  {
    "name": "vmseq.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmseq.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg8e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg8e8.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vasub.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vasub.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfnmsub.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfnmsub.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg4e32ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg4e32ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwsub.wf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwsub.wf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vredmin.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vredmin.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg6e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg6e8.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwmul.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmul.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsub.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsub.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg8ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg8ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsetvli",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vtypei",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 11,
          "RV32": 11
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsetvli {xd}, {xs1}, {vtypei}"
    }
  },
  {
    "name": "vlseg4e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg4e16.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwredsumu.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwredsumu.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg2ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg2ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg5e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg5e64.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnclipu.wv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnclipu.wv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vle64ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vle64ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg3e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg3e16.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vle16ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vle16ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwsub.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsub.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg7e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg7e16.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwmacc.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwmacc.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vaaddu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vaaddu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vand.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vand.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfsgnjx.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfsgnjx.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg8e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg8e16.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg6e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg6e32.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwnmsac.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwnmsac.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg8e64ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg8e64ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg3e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg3e8.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg2ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg2ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsltu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsltu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfsub.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfsub.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg8e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg8e64.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlm.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vlm.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vsmul.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsmul.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwmul.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwmul.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmv.f.s",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vfmv.f.s {fd}, {vs2}"
    }
  },
  {
    "name": "vwmul.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmul.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg8ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg8ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg6ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg6ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg3ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg3ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfncvt.f.x.w",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfncvt.f.x.w {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg3ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg3ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwcvt.f.xu.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwcvt.f.xu.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwcvt.rtz.x.f.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwcvt.rtz.x.f.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg4e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg4e64.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmflt.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmflt.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg6e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg6e64.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmfgt.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmfgt.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg8ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg8ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmulh.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmulh.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vrgather.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrgather.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsleu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsleu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsub.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsub.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg2e8ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg2e8ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg8e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg8e64.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnsra.wx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnsra.wx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg6e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg6e64.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg5ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg5ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg4ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg4ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg3e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg3e32.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vasubu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vasubu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg2ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg2ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg5ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg5ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg5ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg5ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwredosum.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwredosum.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg4ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg4ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vrem.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrem.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfirst.m",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfirst.m {xd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg3ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg3ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl8re8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl8re8.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vsetivli",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vtypei",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 10,
          "RV64": 10
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsetivli {xd}, {uimm}, {vtypei}"
    }
  },
  {
    "name": "vfadd.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfadd.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmaxu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmaxu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg5ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg5ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl2re32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl2re32.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vssseg7e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg7e32.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg4e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg4e16.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmsub.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmsub.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vse64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vse64.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg3ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg3ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmv8r.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmv8r.v {vd}, {vs2}"
    }
  },
  {
    "name": "vfwadd.wv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwadd.wv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg5e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg5e16.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsmul.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsmul.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsext.vf4",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsext.vf4 {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfnmsac.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfnmsac.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsleu.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsleu.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmsub.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmsub.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsgt.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsgt.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmorn.mm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmorn.mm {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vwmulu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmulu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg4e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg4e32.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vdivu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vdivu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg3ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg3ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg3ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg3ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg4ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg4ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg6ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg6ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwredusum.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwredusum.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg6ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg6ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vzext.vf2",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vzext.vf2 {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg5ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg5ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmerge.vfm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vfmerge.vfm {vd}, {vs2}, {fs1}, v0"
    }
  },
  {
    "name": "vmv4r.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmv4r.v {vd}, {vs2}"
    }
  },
  {
    "name": "vwmaccus.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmaccus.vx {vd}, {xs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vrsub.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrsub.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg7e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg7e64.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmv.v.i",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmv.v.i {vd}, {imm}"
    }
  },
  {
    "name": "vfcvt.f.x.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfcvt.f.x.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg2ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg2ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmadd.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmadd.vx {vd}, {xs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg7ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg7ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmslt.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmslt.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnsrl.wx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnsrl.wx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwmsac.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwmsac.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnclip.wx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnclip.wx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwcvt.f.x.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwcvt.f.x.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwaddu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwaddu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfnmacc.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfnmacc.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg7e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg7e32.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg5ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg5ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfredmin.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfredmin.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vse32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vse32.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg3ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg3ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmseq.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmseq.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwadd.wf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwadd.wf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfncvt.rod.f.f.w",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfncvt.rod.f.f.w {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsll.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsll.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg2ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg2ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg4e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg4e8.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg4e8ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg4e8ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg3ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg3ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg4ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg4ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsll.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsll.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlse32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlse32.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg6ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg6ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwredsum.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwredsum.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmin.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmin.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfcvt.rtz.xu.f.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfcvt.rtz.xu.f.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg6ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg6ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg3e16ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg3e16ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmerge.vxm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmerge.vxm {vd}, {vs2}, {xs1}, v0"
    }
  },
  {
    "name": "vfmv.s.f",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vfmv.s.f {vd}, {fs1}"
    }
  },
  {
    "name": "vwadd.wx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwadd.wx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmul.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmul.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg8e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg8e64.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmacc.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmacc.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsbc.vvm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsbc.vvm {vd}, {vs2}, {vs1}, v0"
    }
  },
  {
    "name": "vl4re8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl4re8.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vsoxseg5ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg5ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vxor.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vxor.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg5e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg5e32.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssrl.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssrl.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg4ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg4ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vrgather.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrgather.vi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwnmacc.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwnmacc.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vaaddu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vaaddu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vredxor.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vredxor.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg5ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg5ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnsrl.wv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnsrl.wv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsgtu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsgtu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg8ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg8ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vrgatherei16.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrgatherei16.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg5e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg5e8.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmulhu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmulhu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg8ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg8ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg6ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg6ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwsub.wv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwsub.wv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg7e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg7e16.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vadd.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vadd.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwmaccsu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmaccsu.vx {vd}, {xs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmadc.vim",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmadc.vim {vd}, {vs2}, {imm}, v0"
    }
  },
  {
    "name": "vfsgnjx.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfsgnjx.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg2ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg2ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl8re32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl8re32.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vslideup.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vslideup.vi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmsac.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmsac.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfrsqrt7.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfrsqrt7.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg5e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg5e8.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl2re8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl2re8.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vluxseg6ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg6ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfdiv.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfdiv.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg5ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg5ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg6e64ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg6e64ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsne.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsne.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg7e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg7e16.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwmacc.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmacc.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg7ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg7ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg7e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg7e32.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg2e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg2e16.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg7ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg7ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg2e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg2e64.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg5e8ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg5e8ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg7ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg7ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmaxu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmaxu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwadd.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwadd.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg2ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg2ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg5ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg5ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg5e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg5e64.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssra.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssra.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlse8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlse8.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vaadd.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vaadd.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg8e8ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg8e8ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg2e32ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg2e32ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg8e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg8e8.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfnmsub.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfnmsub.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsle.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsle.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmv.s.x",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmv.s.x {vd}, {xs1}"
    }
  },
  {
    "name": "vssubu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssubu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg5ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg5ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmulh.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmulh.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwsub.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwsub.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg6ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg6ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwnmsac.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwnmsac.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg8ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg8ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vadc.vim",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vadc.vim {vd}, {vs2}, {imm}, v0"
    }
  },
  {
    "name": "vlsseg2e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg2e64.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg8ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg8ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsbc.vvm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmsbc.vvm {vd}, {vs2}, {vs1}, v0"
    }
  },
  {
    "name": "vmulhsu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmulhsu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsle.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsle.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg7e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg7e64.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmfeq.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmfeq.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfcvt.rtz.x.f.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfcvt.rtz.x.f.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg7e64ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg7e64ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg4e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg4e32.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg6e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg6e16.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssub.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssub.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg8e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg8e8.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsgt.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsgt.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfsgnj.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfsgnj.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfrdiv.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfrdiv.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfsgnjn.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfsgnjn.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg5e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg5e8.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg4ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg4ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vredor.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vredor.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwadd.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwadd.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsof.m",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsof.m {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg4e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg4e8.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg4ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg4ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwsubu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsubu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsse8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsse8.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg2ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg2ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vcompress.vm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vcompress.vm {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vle32ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vle32ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg3e64ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg3e64ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsext.vf8",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsext.vf8 {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmadc.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmadc.vi {vd}, {vs2}, {imm}"
    }
  },
  {
    "name": "vssseg8e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg8e16.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg6e8ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg6e8ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfnmsac.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfnmsac.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsra.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsra.vi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmxnor.mm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmxnor.mm {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vlseg3e8ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg3e8ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmax.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmax.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnclipu.wi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnclipu.wi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsetvl",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsetvl {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "vmsgtu.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsgtu.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg4e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg4e8.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfcvt.f.xu.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfcvt.f.xu.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg2e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg2e8.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmv.v.x",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmv.v.x {vd}, {xs1}"
    }
  },
  {
    "name": "vrsub.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrsub.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwadd.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwadd.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssub.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssub.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg6ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg6ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg5ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg5ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg8e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg8e64.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsbc.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmsbc.vv {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vsseg8e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg8e16.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwmul.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwmul.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg4e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg4e8.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg6e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg6e64.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg4e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg4e64.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssra.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssra.vi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg2ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg2ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg2e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg2e8.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vor.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vor.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vzext.vf4",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vzext.vf4 {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg6e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg6e16.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnmsub.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnmsub.vx {vd}, {xs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmfle.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmfle.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg8e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg8e16.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vle16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vle16.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg8ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg8ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwmsac.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwmsac.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsadd.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsadd.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl1re64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl1re64.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vsseg2e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg2e16.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmin.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmin.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg7e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg7e16.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsse64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsse64.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwsub.wx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsub.wx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssra.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssra.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg4ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg4ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg6e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg6e32.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vor.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vor.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmax.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmax.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl4re64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl4re64.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vsoxseg6ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg6ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmulhu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmulhu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vs4r.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vs4r.v {vs3}, 0({xs1})"
    }
  },
  {
    "name": "vslidedown.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vslidedown.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmul.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmul.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg2ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg2ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssrl.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssrl.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg8e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg8e32.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg3ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg3ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmin.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmin.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vle8ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vle8ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg5e64ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg5e64ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmadc.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmadc.vv {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vluxseg3ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg3ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vle32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vle32.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsrl.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsrl.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg7ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg7ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg4ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg4ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmor.mm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmor.mm {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vsoxseg6ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg6ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vadc.vxm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vadc.vxm {vd}, {vs2}, {xs1}, v0"
    }
  },
  {
    "name": "vsseg7e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg7e32.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwmulu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmulu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg5e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg5e32.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vor.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vor.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vcpop.m",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vcpop.m {xd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg8ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg8ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vrem.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrem.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg7e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg7e8.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg7e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg7e8.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg2e64ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg2e64ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg2e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg2e16.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssrl.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssrl.vi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg7e8ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg7e8ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg3ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg3ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmv2r.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmv2r.v {vd}, {vs2}"
    }
  },
  {
    "name": "vs1r.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vs1r.v {vs3}, 0({xs1})"
    }
  },
  {
    "name": "vssseg3e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg3e64.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vse8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vse8.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsm.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsm.v {vs3}, ({xs1})"
    }
  },
  {
    "name": "vsoxseg8ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg8ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg6ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg6ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfadd.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfadd.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg6e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg6e8.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vminu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vminu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vredand.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vredand.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg4e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg4e32.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg7ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg7ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmxor.mm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmxor.mm {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vl1re8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl1re8.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vlseg6e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg6e8.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg2e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg2e64.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnclip.wi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnclip.wi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg8ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg8ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg3e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg3e64.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwaddu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwaddu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg8e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg8e32.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vremu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vremu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vrgather.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vrgather.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsext.vf2",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsext.vf2 {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg6ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg6ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsbc.vxm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmsbc.vxm {vd}, {vs2}, {xs1}, v0"
    }
  },
  {
    "name": "vslide1up.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vslide1up.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwsubu.wx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsubu.wx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg2e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg2e8.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg3e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg3e32.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg7ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg7ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg3e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg3e64.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfsub.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfsub.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vslideup.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vslideup.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnmsac.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnmsac.vx {vd}, {xs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfnmadd.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfnmadd.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg2e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg2e32.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg5e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg5e8.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vle64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vle64.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsra.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsra.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnclipu.wx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnclipu.wx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg7e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg7e8.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsne.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsne.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmv.v.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmv.v.v {vd}, {vs1}"
    }
  },
  {
    "name": "vluxseg3ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg3ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vadc.vvm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vadc.vvm {vd}, {vs2}, {vs1}, v0"
    }
  },
  {
    "name": "vwmaccsu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmaccsu.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg6e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg6e32.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsaddu.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsaddu.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg4ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg4ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsse16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsse16.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmin.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmin.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg2e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg2e64.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwmaccu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmaccu.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl2re16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl2re16.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vmslt.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmslt.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmerge.vvm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmerge.vvm {vd}, {vs2}, {vs1}, v0"
    }
  },
  {
    "name": "vnmsac.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnmsac.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmadc.vxm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmadc.vxm {vd}, {vs2}, {xs1}, v0"
    }
  },
  {
    "name": "vwsub.wv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsub.wv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlse16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlse16.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmulhsu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmulhsu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmax.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmax.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsrl.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsrl.vi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl1re16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl1re16.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vs2r.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vs2r.v {vs3}, 0({xs1})"
    }
  },
  {
    "name": "vfcvt.xu.f.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfcvt.xu.f.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmseq.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmseq.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg7e16ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg7e16ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg7ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg7ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg5ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg5ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg4e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg4e16.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsltu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsltu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vslidedown.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vslidedown.vi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg7ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg7ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsne.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsne.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg4ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg4ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnsra.wv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnsra.wv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsbc.vxm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsbc.vxm {vd}, {vs2}, {xs1}, v0"
    }
  },
  {
    "name": "vfncvt.x.f.w",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfncvt.x.f.w {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg4ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg4ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfclass.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfclass.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vadd.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vadd.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwnmacc.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwnmacc.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vs8r.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vs8r.v {vs3}, 0({xs1})"
    }
  },
  {
    "name": "vsll.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsll.vi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsbc.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmsbc.vx {vd}, {vs2}, {xs1}"
    }
  },
  {
    "name": "vl4re16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl4re16.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vfrec7.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfrec7.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg7ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg7ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwsubu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsubu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwcvt.f.f.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwcvt.f.f.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vzext.vf8",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vzext.vf8 {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vle8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vle8.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfsgnj.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfsgnj.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfdiv.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfdiv.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg8ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg8ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfredusum.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfredusum.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg2e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg2e16.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfcvt.x.f.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfcvt.x.f.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg3e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg3e8.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg5e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg5e16.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmacc.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmacc.vx {vd}, {xs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vredminu.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vredminu.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg6ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg6ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg5e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg5e32.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfncvt.f.f.w",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfncvt.f.f.w {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg5e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg5e64.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlse64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlse64.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnsrl.wi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnsrl.wi {vd}, {vs2}, {uimm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vremu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vremu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg6e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg6e8.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg2e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg2e32.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwmulsu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmulsu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsadd.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsadd.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vand.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vand.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg6e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg6e16.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg3e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg3e16.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl8re16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl8re16.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vsaddu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsaddu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg6e16ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg6e16ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwadd.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwadd.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfslide1up.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfslide1up.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vdiv.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vdiv.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vaadd.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vaadd.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg8e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg8e32.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg8ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg8ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg2ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg2ei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmnor.mm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmnor.mm {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vloxseg2ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg2ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfncvt.xu.f.w",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfncvt.xu.f.w {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg7ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg7ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmadc.vvm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmadc.vvm {vd}, {vs2}, {vs1}, v0"
    }
  },
  {
    "name": "vmfeq.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmfeq.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssubu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssubu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmax.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmax.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmul.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmul.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vdiv.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vdiv.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmfne.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmfne.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwaddu.wx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwaddu.wx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg5ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg5ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg3e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg3e32.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg4e16ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg4e16ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwcvt.rtz.xu.f.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwcvt.rtz.xu.f.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg3e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg3e16.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwmacc.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwmacc.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg6e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg6e16.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg8ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg8ei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfncvt.f.xu.w",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfncvt.f.xu.w {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsaddu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsaddu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg5e32ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg5e32ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg3e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg3e32.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfsqrt.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfsqrt.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg8e16ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg8e16ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg2ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg2ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg6e32ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg6e32ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg3ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg3ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsleu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsleu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsrl.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsrl.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmfle.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmfle.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vslide1down.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vslide1down.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg2e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg2e32.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfrsub.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfrsub.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwmaccu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmaccu.vx {vd}, {xs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vredmax.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vredmax.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vxor.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vxor.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfnmacc.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfnmacc.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfslide1down.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfslide1down.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwadd.wv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwadd.wv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vdivu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vdivu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vadd.vi",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vadd.vi {vd}, {vs2}, {imm}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxei8.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxei32.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg7ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg7ei16.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwsubu.wv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwsubu.wv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vasub.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vasub.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg3ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg3ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg3e32ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg3e32ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwsub.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwsub.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg4e64ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg4e64ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg8e32ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg8e32ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsadd.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsadd.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl1re32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl1re32.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vsuxseg8ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg8ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vminu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vminu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmnand.mm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmnand.mm {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vlseg2e16ff.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg2e16ff.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg8e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg8e8.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg8e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg8e32.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmul.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmul.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "viota.m",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"viota.m {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg4ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg4ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfredmax.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfredmax.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg2ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg2ei64.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg7e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg7e64.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmv.v.f",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vfmv.v.f {vd}, {fs1}"
    }
  },
  {
    "name": "vfnmadd.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfnmadd.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg2ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg2ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmadd.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmadd.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl8re64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl8re64.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vfncvt.rtz.x.f.w",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfncvt.rtz.x.f.w {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg4e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg4e64.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmsac.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmsac.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg2e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg2e32.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vssseg7e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vssseg7e8.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg2e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg2e8.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg4ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg4ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vid.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vid.v {vd}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg3ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg3ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vnclip.wv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vnclip.wv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg3e8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg3e8.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl4re32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl4re32.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vsseg5e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg5e32.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vredmaxu.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vredmaxu.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfmacc.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfmacc.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsbf.m",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsbf.m {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfsgnjn.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfsgnjn.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfredosum.vs",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfredosum.vs {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmfge.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmfge.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlseg4e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlseg4e64.v {vd}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmsif.m",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmsif.m {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmacc.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmacc.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwcvt.xu.f.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwcvt.xu.f.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwmacc.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmacc.vx {vd}, {xs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg4ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg4ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmandn.mm",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmandn.mm {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vsoxseg5ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg5ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmfne.vf",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vmfne.vf {vd}, {vs2}, {fs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vl2re64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vl2re64.v {vd}, ({xs1})"
    }
  },
  {
    "name": "vsuxseg7ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg7ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vasubu.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vasubu.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsseg5e64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsseg5e64.v {vs3}, ({xs1}){vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwmulsu.vx",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwmulsu.vx {vd}, {vs2}, {xs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsse32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsse32.v {vs3}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vloxseg7ei64.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vloxseg7ei64.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vmerge.vim",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vmerge.vim {vd}, {vs2}, {imm}, v0"
    }
  },
  {
    "name": "vlsseg5e16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg5e16.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vwaddu.wv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vwaddu.wv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vlsseg4e32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vlsseg4e32.v {vd}, ({xs1}), {xs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsra.vv",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsra.vv {vd}, {vs2}, {vs1}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsuxseg8ei8.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsuxseg8ei8.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vluxseg6ei32.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vluxseg6ei32.v {vd}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vsoxseg4ei16.v",
    "extension": "V",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs3",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vsoxseg4ei16.v {vs3}, ({xs1}), {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "sc.d",
    "extension": "Zalrsc",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"sc.d{suffix} {xd}, {xs2}, 0({xs1})\")\n}"
    }
  },
  {
    "name": "lr.w",
    "extension": "Zalrsc",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"lr.w{suffix} {xd}, 0({xs1})\")\n}"
    }
  },
  {
    "name": "lr.d",
    "extension": "Zalrsc",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"lr.d{suffix} {xd}, 0({xs1})\")\n}"
    }
  },
  {
    "name": "sc.w",
    "extension": "Zalrsc",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"sc.w{suffix} {xd}, {xs2}, 0({xs1})\")\n}"
    }
  },
  {
    "name": "czero.nez",
    "extension": "Zicond",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "czero.nez {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "czero.eqz",
    "extension": "Zicond",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "czero.eqz {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "vsha2ch.vv",
    "extension": "Zvknha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsha2ch.vv {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vsha2cl.vv",
    "extension": "Zvknha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsha2cl.vv {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vsha2ms.vv",
    "extension": "Zvknha",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vsha2ms.vv {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "ld",
    "extension": "Zilsd",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "rd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "rs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "offset",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      }
    ],
    "assembly_syntax": {
      "Format": "ld {rd}, {offset}({rs1})"
    }
  },
  {
    "name": "sd",
    "extension": "Zilsd",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "offset",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sd {xs2}, {offset}({xs1})"
    }
  },
  {
    "name": "orn",
    "extension": "B",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "orn {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "rev8",
    "extension": "B",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "rev8 {xd}, {xs1}"
    }
  },
  {
    "name": "clmulh",
    "extension": "B",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "clmulh {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "rorw",
    "extension": "B",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "rorw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "roriw",
    "extension": "B",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "roriw {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "xnor",
    "extension": "B",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "xnor {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "rol",
    "extension": "B",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "rol {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "andn",
    "extension": "B",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "andn {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "rolw",
    "extension": "B",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "rolw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "rori",
    "extension": "B",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 6
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "rori {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "ror",
    "extension": "B",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "ror {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "clmul",
    "extension": "B",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "clmul {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "fence.i",
    "extension": "Zifencei",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fence.i"
    }
  },
  {
    "name": "mnret",
    "extension": "Smrnmi",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "mnret"
    }
  },
  {
    "name": "dret",
    "extension": "Sdext",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "dret"
    }
  },
  {
    "name": "cbo.zero",
    "extension": "Zicboz",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "cbo.zero ({xs1})"
    }
  },
  {
    "name": "sh1add.uw",
    "extension": "Zba",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sh1add.uw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sh1add",
    "extension": "Zba",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sh1add {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "slli.uw",
    "extension": "Zba",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 6
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "slli.uw {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "sh2add.uw",
    "extension": "Zba",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sh2add.uw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sh3add.uw",
    "extension": "Zba",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sh3add.uw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "add.uw",
    "extension": "Zba",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "add.uw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sh2add",
    "extension": "Zba",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sh2add {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sh3add",
    "extension": "Zba",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sh3add {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "cbo.flush",
    "extension": "Zicbom",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "cbo.flush ({xs1})"
    }
  },
  {
    "name": "cbo.clean",
    "extension": "Zicbom",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "cbo.clean ({xs1})"
    }
  },
  {
    "name": "cbo.inval",
    "extension": "Zicbom",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "cbo.inval ({xs1})"
    }
  },
  {
    "name": "fmul.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmul.h {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fcvt.s.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.s.h {fd}, {fs1}"
    }
  },
  {
    "name": "fmax.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmax.h {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fle.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fle.h {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvt.lu.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.lu.h {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "flh",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "flh {fd}, {imm}({xs1})"
    }
  },
  {
    "name": "fmadd.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmadd.h {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fsub.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsub.h {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fcvt.h.s",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.h.s {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fmaxm.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmaxm.h {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fsgnjx.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnjx.h {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fmsub.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmsub.h {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fsh",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsh {fs2}, {imm}({xs1})"
    }
  },
  {
    "name": "fsqrt.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsqrt.h {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fdiv.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fdiv.h {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fcvt.h.lu",
    "extension": "Zfh",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.h.lu {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "fnmsub.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fnmsub.h {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fcvt.d.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.d.h {fd}, {fs1}"
    }
  },
  {
    "name": "fcvt.h.d",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.h.d {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fsgnjn.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnjn.h {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "froundnx.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "froundnx.h {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "flt.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "flt.h {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvt.h.l",
    "extension": "Zfh",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.h.l {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "fleq.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fleq.h {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fminm.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fminm.h {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fclass.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fclass.h {xd}, {fs1}"
    }
  },
  {
    "name": "fcvt.l.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.l.h {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fli.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "FliConstant",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fli.h {fd}, {uimm}"
    }
  },
  {
    "name": "fadd.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fadd.h {fd}, {fs1}, {fs2}, {rm}"
    }
  },
  {
    "name": "fcvt.wu.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.wu.h {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fround.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fround.h {fd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fmv.x.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmv.x.h {xd}, {fs1}"
    }
  },
  {
    "name": "fltq.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fltq.h {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvt.h.w",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.h.w {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "feq.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "feq.h {xd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fcvt.h.wu",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.h.wu {fd}, {xs1}, {rm}"
    }
  },
  {
    "name": "fsgnj.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fsgnj.h {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "fmv.h.x",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmv.h.x {fd}, {xs1}"
    }
  },
  {
    "name": "fcvt.w.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fcvt.w.h {xd}, {fs1}, {rm}"
    }
  },
  {
    "name": "fnmadd.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs3",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "rm",
        "operand_type": "RoundMode",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fnmadd.h {fd}, {fs1}, {fs2}, {fs3}, {rm}"
    }
  },
  {
    "name": "fmin.h",
    "extension": "Zfh",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fmin.h {fd}, {fs1}, {fs2}"
    }
  },
  {
    "name": "vfwmaccbf16.vv",
    "extension": "Zvfbfwma",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwmaccbf16.vv {vd}, {vs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwmaccbf16.vf",
    "extension": "Zvfbfwma",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "fs1",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwmaccbf16.vf {vd}, {fs1}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "lpad",
    "extension": "Zicfilp",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 20,
          "RV32": 20
        },
        "restrictions": {
          "multiple_of": 4096
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lpad {uimm}"
    }
  },
  {
    "name": "amomin.d",
    "extension": "Zaamo",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomin.d{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoand.w",
    "extension": "Zaamo",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoand.w{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoadd.w",
    "extension": "Zaamo",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoadd.w{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomaxu.w",
    "extension": "Zaamo",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomaxu.w{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amominu.d",
    "extension": "Zaamo",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amominu.d{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoxor.d",
    "extension": "Zaamo",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoxor.d{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoxor.w",
    "extension": "Zaamo",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoxor.w{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoor.w",
    "extension": "Zaamo",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoor.w{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoor.d",
    "extension": "Zaamo",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoor.d{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoand.d",
    "extension": "Zaamo",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoand.d{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoswap.w",
    "extension": "Zaamo",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoswap.w{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomaxu.d",
    "extension": "Zaamo",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomaxu.d{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoadd.d",
    "extension": "Zaamo",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoadd.d{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomin.w",
    "extension": "Zaamo",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomin.w{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amominu.w",
    "extension": "Zaamo",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amominu.w{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomax.w",
    "extension": "Zaamo",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomax.w{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amoswap.d",
    "extension": "Zaamo",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amoswap.d{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amomax.d",
    "extension": "Zaamo",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amomax.d{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "vghsh.vv",
    "extension": "Zvkg",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vs1",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vghsh.vv {vd}, {vs2}, {vs1}"
    }
  },
  {
    "name": "vgmul.vv",
    "extension": "Zvkg",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vgmul.vv {vd}, {vs2}"
    }
  },
  {
    "name": "aes32dsi",
    "extension": "Zknd",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "bs",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes32dsi {xd}, {xs1}, {xs2}, {bs}"
    }
  },
  {
    "name": "aes64dsm",
    "extension": "Zknd",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes64dsm {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "aes64im",
    "extension": "Zknd",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes64im {xd}, {xs1}"
    }
  },
  {
    "name": "aes64ds",
    "extension": "Zknd",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes64ds {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "aes32dsmi",
    "extension": "Zknd",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "bs",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "aes32dsmi {xd}, {xs1}, {xs2}, {bs}"
    }
  },
  {
    "name": "sm4ks",
    "extension": "Zks",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "bs",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 2,
          "RV32": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sm4ks {xd}, {xs1}, {xs2}, {bs}"
    }
  },
  {
    "name": "sm3p1",
    "extension": "Zks",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sm3p1 {xd}, {xs1}"
    }
  },
  {
    "name": "sm3p0",
    "extension": "Zks",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sm3p0 {xd}, {xs1}"
    }
  },
  {
    "name": "sm4ed",
    "extension": "Zks",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "bs",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 2,
          "RV64": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sm4ed {xd}, {xs1}, {xs2}, {bs}"
    }
  },
  {
    "name": "mop.r.n",
    "extension": "Zimop",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "n",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "format!(\"mop.r.{} {xd}, {xs1}\", n)"
    }
  },
  {
    "name": "mop.rr.n",
    "extension": "Zimop",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "n",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "format!(\"mop.rr.{} {xd}, {xs1}, {xs2}\", n)"
    }
  },
  {
    "name": "csrrsi",
    "extension": "Zicsr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "csr",
        "operand_type": "CSRAddress",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "csrrsi {xd}, {csr}, {uimm}"
    }
  },
  {
    "name": "csrrci",
    "extension": "Zicsr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "csr",
        "operand_type": "CSRAddress",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "csrrci {xd}, {csr}, {uimm}"
    }
  },
  {
    "name": "csrrs",
    "extension": "Zicsr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "csr",
        "operand_type": "CSRAddress",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "csrrs {xd}, {csr}, {xs1}"
    }
  },
  {
    "name": "csrrw",
    "extension": "Zicsr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "csr",
        "operand_type": "CSRAddress",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "csrrw {xd}, {csr}, {xs1}"
    }
  },
  {
    "name": "csrrwi",
    "extension": "Zicsr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "csr",
        "operand_type": "CSRAddress",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "csrrwi {xd}, {csr}, {uimm}"
    }
  },
  {
    "name": "csrrc",
    "extension": "Zicsr",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "csr",
        "operand_type": "CSRAddress",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "csrrc {xd}, {csr}, {xs1}"
    }
  },
  {
    "name": "clmulr",
    "extension": "Zbc",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "clmulr {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "max",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "max {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "orc.b",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "orc.b {xd}, {xs1}"
    }
  },
  {
    "name": "sext.b",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sext.b {xd}, {xs1}"
    }
  },
  {
    "name": "cpopw",
    "extension": "Zbb",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "cpopw {xd}, {xs1}"
    }
  },
  {
    "name": "cpop",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "cpop {xd}, {xs1}"
    }
  },
  {
    "name": "sext.h",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sext.h {xd}, {xs1}"
    }
  },
  {
    "name": "clz",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "clz {xd}, {xs1}"
    }
  },
  {
    "name": "ctzw",
    "extension": "Zbb",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "ctzw {xd}, {xs1}"
    }
  },
  {
    "name": "ctz",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "ctz {xd}, {xs1}"
    }
  },
  {
    "name": "zext.h",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "zext.h {xd}, {xs1}"
    }
  },
  {
    "name": "minu",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "minu {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "maxu",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "maxu {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "min",
    "extension": "Zbb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "min {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "clzw",
    "extension": "Zbb",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "clzw {xd}, {xs1}"
    }
  },
  {
    "name": "c.j",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 11,
          "RV64": 11
        },
        "restrictions": {
          "multiple_of": 2
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.j {imm}"
    }
  },
  {
    "name": "c.srai",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.srai {xd}, {shamt}"
    }
  },
  {
    "name": "c.lui",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 6,
          "RV64": 6
        },
        "restrictions": {
          "min_max": [
            -32,
            31
          ],
          "forbidden_values": [
            0
          ]
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        },
        "restrictions": {
          "forbidden_values": [
            0,
            2
          ]
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "format!(\"c.lui {}, 0x{:x}\", xd, imm.get() as u32 & 0xfffff)"
    }
  },
  {
    "name": "c.add",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.add {xd}, {xs2}"
    }
  },
  {
    "name": "c.ldsp",
    "extension": "C",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 6
        },
        "restrictions": {
          "multiple_of": 8
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.ldsp {xd}, {uimm}(sp)"
    }
  },
  {
    "name": "c.lw",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        },
        "restrictions": {
          "multiple_of": 4
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.lw {xd}, {uimm}({xs1})"
    }
  },
  {
    "name": "c.li",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 6,
          "RV64": 6
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.li {xd}, {imm}"
    }
  },
  {
    "name": "c.lwsp",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 6,
          "RV64": 6
        },
        "restrictions": {
          "multiple_of": 4
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.lwsp {xd}, {uimm}(sp)"
    }
  },
  {
    "name": "c.addw",
    "extension": "C",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.addw {xd}, {xs2}"
    }
  },
  {
    "name": "c.slli",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.slli {xd}, {shamt}"
    }
  },
  {
    "name": "c.andi",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 6
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.andi {xd}, {imm}"
    }
  },
  {
    "name": "c.jal",
    "extension": "C",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 11
        },
        "restrictions": {
          "multiple_of": 2
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.jal {imm}"
    }
  },
  {
    "name": "c.jr",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.jr {xs1}"
    }
  },
  {
    "name": "c.addi16sp",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 6
        },
        "restrictions": {
          "multiple_of": 16,
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.addi16sp sp, {imm}"
    }
  },
  {
    "name": "c.nop",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "c.nop"
    }
  },
  {
    "name": "c.bnez",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 8,
          "RV32": 8
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.bnez {xs1}, {imm}"
    }
  },
  {
    "name": "c.ld",
    "extension": "C",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5
        },
        "restrictions": {
          "multiple_of": 8
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.ld {xd}, {uimm}({xs1})"
    }
  },
  {
    "name": "c.addi",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 6
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.addi {xd}, {imm}"
    }
  },
  {
    "name": "c.sub",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.sub {xd}, {xs2}"
    }
  },
  {
    "name": "c.subw",
    "extension": "C",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.subw {xd}, {xs2}"
    }
  },
  {
    "name": "c.ebreak",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "c.ebreak"
    }
  },
  {
    "name": "c.sd",
    "extension": "C",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5
        },
        "restrictions": {
          "multiple_of": 8
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.sd {xs2}, {uimm}({xs1})"
    }
  },
  {
    "name": "c.sdsp",
    "extension": "C",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 6
        },
        "restrictions": {
          "multiple_of": 8
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.sdsp {xs2}, {uimm}(sp)"
    }
  },
  {
    "name": "c.srli",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 6
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.srli {xd}, {shamt}"
    }
  },
  {
    "name": "c.swsp",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 6,
          "RV64": 6
        },
        "restrictions": {
          "multiple_of": 4
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.swsp {xs2}, {uimm}(sp)"
    }
  },
  {
    "name": "c.beqz",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 8,
          "RV32": 8
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.beqz {xs1}, {imm}"
    }
  },
  {
    "name": "c.addi4spn",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 8,
          "RV32": 8
        },
        "restrictions": {
          "multiple_of": 4,
          "forbidden_values": [
            0
          ]
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.addi4spn {xd}, sp, {uimm}"
    }
  },
  {
    "name": "c.xor",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.xor {xd}, {xs2}"
    }
  },
  {
    "name": "c.jalr",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.jalr {xs1}"
    }
  },
  {
    "name": "c.addiw",
    "extension": "C",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 6
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.addiw {xd}, {imm}"
    }
  },
  {
    "name": "c.and",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.and {xd}, {xs2}"
    }
  },
  {
    "name": "c.or",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.or {xd}, {xs2}"
    }
  },
  {
    "name": "c.sw",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        },
        "restrictions": {
          "multiple_of": 4
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.sw {xs2}, {uimm}({xs1})"
    }
  },
  {
    "name": "c.mv",
    "extension": "C",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        },
        "restrictions": {
          "forbidden_values": [
            0
          ]
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.mv {xd}, {xs2}"
    }
  },
  {
    "name": "vfncvtbf16.f.f.w",
    "extension": "Zvfbfmin",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfncvtbf16.f.f.w {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "vfwcvtbf16.f.f.v",
    "extension": "Zvfbfmin",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let vm_suffix = if *vm {\n        \"\"\n    } else {\n        \", v0.t\"\n    };\n    format!(\"vfwcvtbf16.f.f.v {vd}, {vs2}{vm_suffix}\")\n}"
    }
  },
  {
    "name": "sfence.w.inval",
    "extension": "Svinval",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "sfence.w.inval"
    }
  },
  {
    "name": "hinval.vvma",
    "extension": "Svinval",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hinval.vvma {xs1}, {xs2}"
    }
  },
  {
    "name": "sfence.inval.ir",
    "extension": "Svinval",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "sfence.inval.ir"
    }
  },
  {
    "name": "hinval.gvma",
    "extension": "Svinval",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hinval.gvma {xs1}, {xs2}"
    }
  },
  {
    "name": "sinval.vma",
    "extension": "Svinval",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sinval.vma {xs1}, {xs2}"
    }
  },
  {
    "name": "brev8",
    "extension": "Zbkb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "brev8 {xd}, {xs1}"
    }
  },
  {
    "name": "packw",
    "extension": "Zbkb",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "packw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "packh",
    "extension": "Zbkb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "packh {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "unzip",
    "extension": "Zbkb",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "unzip {xd}, {xs1}"
    }
  },
  {
    "name": "pack",
    "extension": "Zbkb",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "pack {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "zip",
    "extension": "Zbkb",
    "isa_bases": [
      "RV32"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "zip {xd}, {xs1}"
    }
  },
  {
    "name": "hsv.w",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hsv.w {xs2}, 0({xs1})"
    }
  },
  {
    "name": "hsv.b",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hsv.b {xs2}, 0({xs1})"
    }
  },
  {
    "name": "hsv.h",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hsv.h {xs2}, 0({xs1})"
    }
  },
  {
    "name": "hfence.gvma",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hfence.gvma {xs1}, {xs2}"
    }
  },
  {
    "name": "hsv.d",
    "extension": "H",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hsv.d {xs2}, 0({xs1})"
    }
  },
  {
    "name": "hfence.vvma",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hfence.vvma {xs1}, {xs2}"
    }
  },
  {
    "name": "hlv.d",
    "extension": "H",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hlv.d {xd}, 0({xs1})"
    }
  },
  {
    "name": "hlv.h",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hlv.h {xd}, 0({xs1})"
    }
  },
  {
    "name": "hlv.w",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hlv.w {xd}, 0({xs1})"
    }
  },
  {
    "name": "hlvx.wu",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hlvx.wu {xd}, 0({xs1})"
    }
  },
  {
    "name": "hlv.bu",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hlv.bu {xd}, 0({xs1})"
    }
  },
  {
    "name": "hlv.b",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hlv.b {xd}, 0({xs1})"
    }
  },
  {
    "name": "hlv.hu",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hlv.hu {xd}, 0({xs1})"
    }
  },
  {
    "name": "hlv.wu",
    "extension": "H",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hlv.wu {xd}, 0({xs1})"
    }
  },
  {
    "name": "hlvx.hu",
    "extension": "H",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "hlvx.hu {xd}, 0({xs1})"
    }
  },
  {
    "name": "xperm4",
    "extension": "Zbkx",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "xperm4 {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "xperm8",
    "extension": "Zbkx",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "xperm8 {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "c.fsdsp",
    "extension": "Zcd",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 6,
          "RV64": 6
        },
        "restrictions": {
          "multiple_of": 8
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.fsdsp {fs2}, {uimm}(sp)"
    }
  },
  {
    "name": "c.fsd",
    "extension": "Zcd",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        },
        "restrictions": {
          "multiple_of": 8
        }
      },
      {
        "name": "fs2",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 3,
          "RV64": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.fsd {fs2}, {uimm}({xs1})"
    }
  },
  {
    "name": "c.fldsp",
    "extension": "Zcd",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 6,
          "RV64": 6
        },
        "restrictions": {
          "multiple_of": 8
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.fldsp {fd}, {uimm}(sp)"
    }
  },
  {
    "name": "c.fld",
    "extension": "Zcd",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        },
        "restrictions": {
          "multiple_of": 8
        }
      },
      {
        "name": "fd",
        "operand_type": "FloatingPointRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 3,
          "RV32": 3
        }
      }
    ],
    "assembly_syntax": {
      "Format": "c.fld {fd}, {uimm}({xs1})"
    }
  },
  {
    "name": "vaesdf.vv",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaesdf.vv {vd}, {vs2}"
    }
  },
  {
    "name": "vaesef.vv",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaesef.vv {vd}, {vs2}"
    }
  },
  {
    "name": "vaesem.vs",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaesem.vs {vd}, {vs2}"
    }
  },
  {
    "name": "vaesz.vs",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaesz.vs {vd}, {vs2}"
    }
  },
  {
    "name": "vaesdm.vs",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaesdm.vs {vd}, {vs2}"
    }
  },
  {
    "name": "vaeskf2.vi",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaeskf2.vi {vd}, {vs2}, {uimm}"
    }
  },
  {
    "name": "vaeskf1.vi",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaeskf1.vi {vd}, {vs2}, {uimm}"
    }
  },
  {
    "name": "vaesdm.vv",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaesdm.vv {vd}, {vs2}"
    }
  },
  {
    "name": "vaesem.vv",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaesem.vv {vd}, {vs2}"
    }
  },
  {
    "name": "vaesdf.vs",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaesdf.vs {vd}, {vs2}"
    }
  },
  {
    "name": "vaesef.vs",
    "extension": "Zvkned",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "vs2",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "vd",
        "operand_type": "VectorRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "vaesef.vs {vd}, {vs2}"
    }
  },
  {
    "name": "sh",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sh {xs2}, {imm}({xs1})"
    }
  },
  {
    "name": "sb",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sb {xs2}, {imm}({xs1})"
    }
  },
  {
    "name": "addi",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "addi {xd}, {xs1}, {imm}"
    }
  },
  {
    "name": "lbu",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lbu {xd}, {imm}({xs1})"
    }
  },
  {
    "name": "sraw",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sraw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sub",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sub {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "jalr",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "jalr {xd}, {imm}({xs1})"
    }
  },
  {
    "name": "srli",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "srli {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "subw",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "subw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "lw",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lw {xd}, {imm}({xs1})"
    }
  },
  {
    "name": "sraiw",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sraiw {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "addiw",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "addiw {xd}, {xs1}, {imm}"
    }
  },
  {
    "name": "sltiu",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sltiu {xd}, {xs1}, {imm}"
    }
  },
  {
    "name": "blt",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "blt {xs1}, {xs2}, {imm}"
    }
  },
  {
    "name": "fence.tso",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fence.tso"
    }
  },
  {
    "name": "ebreak",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "ebreak"
    }
  },
  {
    "name": "bge",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "bge {xs1}, {xs2}, {imm}"
    }
  },
  {
    "name": "slli",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 6,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "slli {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "beq",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "beq {xs1}, {xs2}, {imm}"
    }
  },
  {
    "name": "lwu",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lwu {xd}, {imm}({xs1})"
    }
  },
  {
    "name": "srai",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 6
        }
      }
    ],
    "assembly_syntax": {
      "Format": "srai {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "ld",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "ld {xd}, {imm}({xs1})"
    }
  },
  {
    "name": "lhu",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lhu {xd}, {imm}({xs1})"
    }
  },
  {
    "name": "bltu",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "bltu {xs1}, {xs2}, {imm}"
    }
  },
  {
    "name": "sll",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sll {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "bgeu",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "bgeu {xs1}, {xs2}, {imm}"
    }
  },
  {
    "name": "srliw",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "srliw {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "sllw",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sllw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "ori",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "ori {xd}, {xs1}, {imm}"
    }
  },
  {
    "name": "jal",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 20,
          "RV64": 20
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "jal {xd}, {imm}"
    }
  },
  {
    "name": "or",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "or {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sw",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sw {xs2}, {imm}({xs1})"
    }
  },
  {
    "name": "slliw",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "shamt",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "slliw {xd}, {xs1}, {shamt}"
    }
  },
  {
    "name": "addw",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "addw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "srl",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "srl {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "auipc",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 20,
          "RV32": 20
        },
        "restrictions": {
          "multiple_of": 4096
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "auipc {xd}, {uimm}"
    }
  },
  {
    "name": "mret",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "mret"
    }
  },
  {
    "name": "sd",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sd {xs2}, {imm}({xs1})"
    }
  },
  {
    "name": "bne",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "bne {xs1}, {xs2}, {imm}"
    }
  },
  {
    "name": "andi",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "andi {xd}, {xs1}, {imm}"
    }
  },
  {
    "name": "lh",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lh {xd}, {imm}({xs1})"
    }
  },
  {
    "name": "lb",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lb {xd}, {imm}({xs1})"
    }
  },
  {
    "name": "fence",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "fm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 4,
          "RV32": 4
        }
      },
      {
        "name": "pred",
        "operand_type": "FenceMode",
        "bit_lengths": {
          "RV64": 4,
          "RV32": 4
        }
      },
      {
        "name": "succ",
        "operand_type": "FenceMode",
        "bit_lengths": {
          "RV64": 4,
          "RV32": 4
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "fence {pred}, {succ}"
    }
  },
  {
    "name": "xori",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV64": 12,
          "RV32": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "xori {xd}, {xs1}, {imm}"
    }
  },
  {
    "name": "wfi",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "wfi"
    }
  },
  {
    "name": "ecall",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [],
    "assembly_syntax": {
      "Format": "ecall"
    }
  },
  {
    "name": "srlw",
    "extension": "I",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "srlw {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "lui",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "uimm",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 20,
          "RV32": 20
        },
        "restrictions": {
          "multiple_of": 4096
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "lui {xd}, {uimm}"
    }
  },
  {
    "name": "and",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "and {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "slt",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "slt {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "slti",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "imm",
        "operand_type": "SignedInteger",
        "bit_lengths": {
          "RV32": 12,
          "RV64": 12
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "slti {xd}, {xs1}, {imm}"
    }
  },
  {
    "name": "sra",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sra {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "sltu",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "sltu {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "xor",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "xor {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "add",
    "extension": "I",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "Format": "add {xd}, {xs1}, {xs2}"
    }
  },
  {
    "name": "amocas.q",
    "extension": "Zacas",
    "isa_bases": [
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5
        },
        "restrictions": {
          "multiple_of": 2
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amocas.q{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amocas.d",
    "extension": "Zacas",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        },
        "restrictions": {
          "multiple_of": 2
        }
      },
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV64": 1,
          "RV32": 1
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amocas.d{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  },
  {
    "name": "amocas.w",
    "extension": "Zacas",
    "isa_bases": [
      "RV32",
      "RV64"
    ],
    "operands": [
      {
        "name": "aq",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "rl",
        "operand_type": "UnsignedInteger",
        "bit_lengths": {
          "RV32": 1,
          "RV64": 1
        }
      },
      {
        "name": "xs2",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV64": 5,
          "RV32": 5
        }
      },
      {
        "name": "xs1",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      },
      {
        "name": "xd",
        "operand_type": "IntegerRegister",
        "bit_lengths": {
          "RV32": 5,
          "RV64": 5
        }
      }
    ],
    "assembly_syntax": {
      "RustCode": "{\n    let suffix = if *aq && *rl {\n        \".aqrl\"\n    } else if *aq {\n        \".aq\"\n    } else if *rl {\n        \".rl\"\n    } else {\n        \"\"\n    };\n    format!(\"amocas.w{suffix} {xd}, {xs2}, ({xs1})\", )\n}"
    }
  }
]